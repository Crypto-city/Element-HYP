on:
  push
jobs:
  macos12:
    runs-on: macos-12

    steps:
      - uses: actions/checkout@v4

      - name: git config credential.helper
        run: git config credential.helper

      - name: Brew install base dependencies
        run: | 
          brew install automake berkeley-db@4 miniupnpc qt@5 boost@1.76 gperf qrencode librsvg && curl -L https://raw.githubusercontent.com/vergecurrency/protobuf261/master/protobuf261.rb > protobuf261.rb && brew install protobuf261.rb
          brew unlink openssl && brew reinstall openssl@1.1 && brew link --overwrite openssl@1.1

      - name: Brew link dependencies
        run: brew link boost@1.76 qt@5 berkeley-db@4

      - name: Auto generate
        run: ./autogen.sh

      - name: configure
        run: export CPPFLAGS="-I/usr/local/opt/openssl@1.1/include" export LDFLAGS="-L/usr/local/opt/openssl@1.1/lib" ./configure --disable-bench --disable-tests --disable-dependency-tracking --disable-werror --with-gui --bindir=`pwd`/release/bin --libdir=`pwd`/release/lib

      - name: make
        run: make -j4

      - name: make .dmg
        run: make deploy

      - uses: actions/upload-artifact@v4
        with:
          name: ElementHYP-macos12
          path: |
            *.dmg
            
  ubuntu20:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v4

      - name: Update apt repos
        run: sudo apt-get update

      - name: Install base dependencies
        run: sudo apt-get install build-essential xutils-dev libtool gperf autotools-dev automake pkg-config bsdmainutils libattr1-dev make automake bison byacc cmake curl g++-multilib binutils-gold bison byacc python3

      - name: Build depends
        run: cd depends/ && make -j4 HOST=x86_64-linux-gnu

      - name: Auto generate
        run: ./autogen.sh

      - name: configure
        run: CONFIG_SITE=$PWD/depends/x86_64-linux-gnu/share/config.site ./configure --disable-bench --disable-tests --disable-dependency-tracking --disable-werror --prefix=`pwd`/depends/x86_64-linux-gnu --bindir=`pwd`/release/bin --libdir=`pwd`/release/lib

      - name: make
        run: make -j4
        
      - name: strip
        run: cd ./src && strip elementd && cd ./qt && strip element-qt

      - uses: actions/upload-artifact@v4
        with:
          name: ElementHYP-ubuntu20
          path: |
            ./src/elementd
            ./src/qt/element-qt
            
  windows32-ubuntu20:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v4

      - name: Update apt repos
        run: sudo apt-get update

      - name: Install base dependencies
        run: sudo apt-get install build-essential libtool gperf autotools-dev automake pkg-config bsdmainutils curl git bison byacc python3 nsis

      - name: Force Posix
        run: sudo apt-get install  g++-mingw-w64-i686 mingw-w64-i686-dev && sudo update-alternatives --set i686-w64-mingw32-g++ /usr/bin/i686-w64-mingw32-g++-posix

      - name: Build depends for MingW32 Cross Compile
        run: PATH=$(echo "$PATH" | sed -e 's/:\/mnt.*//g') && cd depends/ && make HOST=i686-w64-mingw32 -j2

      - name: Auto generate
        run: ./autogen.sh

      - name: configure
        run: CONFIG_SITE=$PWD/depends/i686-w64-mingw32/share/config.site ./configure --disable-bench --disable-tests --disable-dependency-tracking --disable-werror --prefix=`pwd`/depends/i686-w64-mingw32 --bindir=`pwd`/release/bin --libdir=`pwd`/release/lib
        
      - name: make
        run: make -j2
        
      - name: strip
        run: cd ./src && strip elementd.exe && cd ./qt && strip element-qt.exe

      - uses: actions/upload-artifact@v4
        with:
          name: ElementHYP-win32
          path: |
            /home/runner/work/Element-HYP/Element-HYP/src/elementd.exe
            /home/runner/work/Element-HYP/Element-HYP/src/qt/element-qt.exe

  windows64-ubuntu20:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v4

      - name: Update apt repos
        run: sudo apt-get update

      - name: Install base dependencies
        run: sudo apt-get install build-essential libtool gperf autotools-dev automake pkg-config bsdmainutils curl git bison byacc python3 nsis

      - name: Force Posix
        run: sudo apt install g++-mingw-w64-x86-64 && sudo update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix 

      - name: Build depends for MingW32 Cross Compile
        run: PATH=$(echo "$PATH" | sed -e 's/:\/mnt.*//g') && cd depends/ && make HOST=x86_64-w64-mingw32 -j2

      - name: Auto generate
        run: ./autogen.sh

      - name: configure
        run: CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure --prefix=/ --disable-bench --disable-tests

      - name: make
        run: make -j2
        
      - name: strip
        run: cd ./src && strip elementd.exe && cd ./qt && strip element-qt.exe

      - uses: actions/upload-artifact@v4
        with:
          name: ElementHYP-win64
          path: |
            /home/runner/work/Element-HYP/Element-HYP/src/elementd.exe
            /home/runner/work/Element-HYP/Element-HYP/src/qt/element-qt.exe